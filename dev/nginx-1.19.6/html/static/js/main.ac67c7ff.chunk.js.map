{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/index.js","actions/types.js","store.js","services/auth.service.js","components/Login.js","actions/auth.js","components/Register.js","services/auth-header.js","services/user.service.js","components/Profile.js","components/BoardUser.js","components/BoardModerator.js","components/BoardAdmin.js","services/tutorial.service.js","http-common.js","components/tutorials-list.component.js","components/tutorial.component.js","components/add-tutorial.component.js","components/audit-history.component.js","helpers/history.js","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","username","email","password","axios","post","then","response","data","accessToken","setItem","stringify","removeItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","useSelector","dispatch","useDispatch","to","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","Promise","resolve","error","toString","reject","login","history","push","window","location","reload","catch","ref","htmlFor","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","register","authHeader","Authorization","get","headers","Profile","currentUser","substring","substr","id","roles","map","index","key","BoardUser","content","setContent","useEffect","UserService","_content","BoardModerator","BoardAdmin","create","baseURL","process","REACT_APP_SERVER_URL","put","delete","TutorialsList","onChangeSearchTitle","bind","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentTutorial","currentIndex","this","setState","editorRole","includes","TutorialDataService","getAll","console","log","tutorial","deleteAll","findByTitle","placeholder","marginLeft","onClick","filter","x","toLowerCase","application","profile","label","Component","Tutorial","onChangeTitle","onChangeDescription","getTutorial","updatePublished","updateTutorial","deleteTutorial","match","params","prevState","title","description","status","published","update","onChangeValue","AddTutorial","save","newTutorial","submitted","AuditListComponent","retrieveAuditLogs","auditLogs","getAudit","event","oldKey","newKey","oldValue","newValue","userEmail","eventDateTime","createBrowserHistory","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","listen","href","exact","path","component","Properties","AddPropertyComponent","EditPropertyComponent","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac67c7ff.chunk.js","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8082/api/auth/\";\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n};\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { login } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const { message } = useSelector(state => state.message);\n\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(login(username, password))\n        .then(() => {\n          props.history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (username, email, password) => (dispatch) => {\n  return AuthService.register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { register } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(register(username, email, password))\n        .then(() => {\n          setSuccessful(true);\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    // For Spring Boot back-end\n    return { Authorization: \"Bearer \" + user.accessToken };\n\n    // for Node.js Express back-end\n    //return { \"x-access-token\": user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://localhost:8082/api/test/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"all\");\n};\n\nconst getUserBoard = () => {\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\n};\n\nexport default {\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n};","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nconst Profile = () => {\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          <strong>{currentUser.username}</strong> Profile\n        </h3>\n      </header>\n      <p>\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n      </p>\n      <p>\n        <strong>Id:</strong> {currentUser.id}\n      </p>\n      <p>\n        <strong>Email:</strong> {currentUser.email}\n      </p>\n      <strong>Authorities:</strong>\n      <ul>\n        {currentUser.roles &&\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardUser = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getUserBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardUser;\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardModerator = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getModeratorBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardModerator;\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardAdmin = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getAdminBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardAdmin;\n","import http from \"../http-common\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\n//const API_URL = \"http://localhost:8082/api/config\";\nconst API_URL = process.env.REACT_APP_SERVER_URL;\nconst CONFIG_PREFIX = \"api/config\";\nclass TutorialDataService {\n\n  getAudit() {\n    return axios.get(`${API_URL}/${CONFIG_PREFIX}/audit`, { headers: authHeader() });\n  }\n  \n  getAll() {\n    return axios.get(`${API_URL}/${CONFIG_PREFIX}`, { headers: authHeader() });\n  }\n\n  get(id) {\n    return axios.get(`${API_URL}/${CONFIG_PREFIX}/${id}`, { headers: authHeader() });\n  }\n\n  create(data) {\n    return axios.post(`${API_URL}/${CONFIG_PREFIX}`, data, { headers: authHeader() });\n  }\n\n  update(data) {\n    return axios.put(`${API_URL}/${CONFIG_PREFIX}`, data, { headers: authHeader() });\n  }\n\n  delete(id) {\n    return axios.delete(API_URL, {\n      headers: authHeader(),\n      data: { id: id }\n    });\n  };\n}\n\nexport default new TutorialDataService();","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8082/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n    //\"Authorization\": \"Bearer \" + localStorage.getItem(\"user\") !== null ? localStorage.getItem(\"user\").accessToken : \"\"\n  }\n});","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"reactstrap\";\n\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveTutorials();\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    this.setState( { user: JSON.parse(localStorage.getItem(\"user\")) });\n    this.setState( { editorRole: (JSON.parse(localStorage.getItem(\"user\")).roles.includes(\"ROLE_MODERATOR\")) || (JSON.parse(localStorage.getItem(\"user\")).roles.includes(\"ROLE_ADMIN\"))}) \n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  retrieveTutorials() {\n    TutorialDataService.getAll()\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveTutorials();\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchTitle() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n\n    TutorialDataService.findByTitle(this.state.searchTitle)\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchTitle, tutorials, currentTutorial, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              value={searchTitle}\n              onChange={this.onChangeSearchTitle}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n              >\n                Search\n              </button>\n              {this.state.editorRole &&\n                <button style={{ marginLeft: \"20px\"}} onClick={() => this.props.history.push('/add')} className=\"btn btn-success\">\n                  New Property\n                </button>\n                }\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-8\">\n          <h4>Property List</h4>\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.filter(x => !searchTitle ? true : x.key.toLowerCase().includes(searchTitle.toLowerCase())).map((tutorial, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  <b>{tutorial.key}</b><br/>{tutorial.value}\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className=\"col-md-2\">\n          {currentTutorial ? (\n            <div>\n              <h4>Property</h4>\n              <div>\n                <label>\n                  <strong>Application:</strong>\n                </label>{\" \"}\n                {currentTutorial.application}\n              </div>\n              <div>\n                <label>\n                  <strong>Profile:</strong>\n                </label>{\" \"}\n                {currentTutorial.profile}\n              </div>\n              <div>\n                <label>\n                  <strong>Label:</strong>\n                </label>{\" \"}\n                {currentTutorial.label}\n              </div>\n              <div>\n                <label>\n                  <strong>Key:</strong>\n                </label>{\" \"}\n                {currentTutorial.key}\n              </div>\n              <div>\n                <label>\n                  <strong>Value:</strong>\n                </label>{\" \"}\n                {currentTutorial.value}\n              </div>\n              {this.state.editorRole &&\n              <Link\n                to={\"/tutorials/\" + currentTutorial.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>}\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please select a Property to edit...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getTutorial = this.getTutorial.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        id: null,\n        application: \"\",\n        profile: \"\",\n        label: \"\",\n        key: \"\",\n        value: \"\"\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeValue(key, value) {\n    this.setState(function(prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          [key]: value\n        }\n      };\n    });\n  }\n\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    \n    this.setState(prevState => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        description: description\n      }\n    }));\n  }\n\n  getTutorial(id) {\n    TutorialDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentTutorial: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n      published: status\n    };\n\n    TutorialDataService.update(this.state.currentTutorial.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateTutorial() {\n    let updateTutorial = this.state.currentTutorial;\n    updateTutorial.id = this.props.match.params.id\n    TutorialDataService.update(\n      updateTutorial\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The configuration was updated. Check the env now.\"\n        });\n        this.props.history.push('/')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteTutorial() {    \n    TutorialDataService.delete(this.state.currentTutorial.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <h4>Property</h4>\n            <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"title\">Application</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.application}\n                  onChange={(e) => this.onChangeValue('application', e.target.value) }\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Profile</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.profile}\n                  onChange={(e) => this.onChangeValue('profile', e.target.value) }\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Label</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.label}\n                  onChange={(e) => this.onChangeValue('label', e.target.value) }\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Key</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.key}\n                  onChange={(e) => this.onChangeValue('key', e.target.value) }\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Value</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.value}\n                  onChange={(e) => this.onChangeValue('value', e.target.value) }\n                />\n              </div>\n            </form>\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please select a Property to edit...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.save = this.save.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      id: null,\n      application: \"ZOOM\",\n      profile: \"DEV\",\n      label: \"DB\",\n      key: \"db_source\",\n      value: \"jdbc\"\n    };\n  }\n\n  onChangeValue(key, value) {\n    this.setState(function(prevState) {\n      return {        \n          ...prevState,\n          [key]: value\n      };\n    });\n  }\n\n  save() {\n    TutorialDataService.create(this.state)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        this.props.history.push('/');\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>The property added. </h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add a new one\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Application</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.application}\n                onChange={(e) => this.onChangeValue('application', e.target.value)}\n                name=\"title\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Profile</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.profile}\n                onChange={(e) => this.onChangeValue('profile', e.target.value)}\n                name=\"title\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Label</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.label}\n                onChange={(e) => this.onChangeValue('label', e.target.value)}\n                name=\"title\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Key</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.key}\n                onChange={(e) => this.onChangeValue('key', e.target.value)}\n                name=\"title\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Value</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.value}\n                onChange={(e) => this.onChangeValue('value', e.target.value)}\n                name=\"title\"\n              />\n            </div>\n            <button onClick={this.save} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"reactstrap\";\n\nexport default class AuditListComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.retrieveTutorials = this.retrieveAuditLogs.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n      user: {},\n      auditLogs: []\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveAuditLogs();\n  }\n\n  retrieveAuditLogs() {\n    TutorialDataService.getAudit()\n      .then(response => {\n        this.setState({\n          auditLogs: response.data,\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchTitle, tutorials, currentTutorial, currentIndex, auditLogs } = this.state;\n\n    return (\n          <Table>\n      <thead>\n        <tr>\n        <th></th>\n          <th>Key</th>\n          <th>Old Value</th>\n          <th></th>\n          <th>New Value</th>\n          <th>Event</th>\n          <th>Changed By</th>\n          <th>Changed on</th>\n        </tr>\n      </thead>\n      <tbody>\n      {this.state.auditLogs.map(x => {\n        return(\n          <tr>\n          <td>{x.key}</td>\n          <td>{x.event === 'DELETE' ? x.oldKey : x.newKey}</td>\n          <td>{x.oldValue}</td>\n          <td>--></td>\n          <td>{x.newValue}</td>\n          <td>{x.event}</td>\n          <td>{x.userEmail}</td>\n          <td>{x.eventDateTime}</td>\n        </tr>\n\n        )\n      })}\n      </tbody>\n    </Table>            \n      );\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/BoardUser\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport BoardAdmin from \"./components/BoardAdmin\";\nimport Properties from \"./components/tutorials-list.component\";\nimport EditPropertyComponent from \"./components/tutorial.component\";\nimport AddPropertyComponent from \"./components/add-tutorial.component\";\nimport AuditListComponent from \"./components/audit-history.component\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from \"./helpers/history\";\n\nconst App = () => {\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(currentUser.roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, [currentUser]);\n\n  const logOut = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Router history={history}>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            Trading Configuration\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n\n          {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/\"} className=\"nav-link\">\n                  Properties\n                </Link>\n              </li>\n            )}\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">\n                  Add\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/audit\"} className=\"nav-link\">\n                  Audit History\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Properties} />\n            <Route exact path=\"/add\" component={AddPropertyComponent} />\n            <Route path=\"/tutorials/:id\" component={EditPropertyComponent} />\n            <Route exact path=\"/audit\" component={AuditListComponent} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can chađinge\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}