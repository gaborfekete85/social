plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'maven-publish'
	id "com.google.cloud.tools.jib" version "3.0.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'io.jsonwebtoken:jjwt:0.5.1'
	compileOnly 'org.projectlombok:lombok:1.18.20'
}

test {
	useJUnitPlatform()
}

def getGitHash = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--short', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

jib {
	from {
		image = "openjdk:11-slim"
	}
	to {
		image = findProperty('DOCKER_REPOSITORY')+"/spring-social"
		tags = [getGitHash()]
		auth {
			username = dockerHubUserName
			password = dockerHubPassword
		}
	}
	container {
		mainClass = "com.example.springsocial.SpringSocialApplication"
		jvmFlags = ['-Xdebug']
		ports = ['8302']
		volumes = ['/data']
		environment = [
				'VERSION': version,
				'DATA_DIR': '/data',
				'APPLICATION_PORT' : '8302',
				'DEVELOPMENT_MODE' : 'true'
		]
	}
}